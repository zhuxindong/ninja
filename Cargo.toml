[package]
name = "ninja"
version = "0.7.7"
edition = "2021"
description = "Reverse engineered ChatGPT proxy"
license = "GPL-3.0"
homepage = "https://github.com/gngpp/ninja"
repository = "https://github.com/gngpp/ninja.git"
readme = "README.md"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
anyhow = "1.0.75"
clap = { version = "4.4.3", features = ["derive", "env"] }
serde = {version = "1.0.188", features = ["derive"] }
openai = { path = "openai" }
cidr = "0.2.2"
toml = "0.8.0"
url = "2.4.1"

tokio = { version = "1.32.0", default-features = false, features = ["rt"], optional = true }
serde_json = { version = "1.0.107", optional = true }
inquire = { version = "0.6.2", optional =  true }
colored_json = { version = "4.0.0", optional = true }
indicatif = { version = "0.17.6", optional = true }
json_to_table = { version = "0.6.0", optional = true }
tabled = { version = "0.12.2", optional = true }
self_update = { version = "0.39.0", default-features = false, features = ["rustls", "archive-tar", "compression-flate2"] }

# allocator
tcmalloc = { version = "0.3.0", optional = true }
snmalloc-rs = { version = "0.3.4", optional = true }
rpmalloc = { version = "0.2.2", optional = true }
jemallocator = { package = "tikv-jemallocator", version = "0.5.4", optional = true }
mimalloc = { version = "0.1.39", default-features = false, optional = true }

[target.'cfg(target_family = "unix")'.dependencies]
daemonize = "0.5.0"
nix = { version = "0.27.1", features = ["signal", "user", "ptrace"]}

[target.'cfg(target_os = "linux")'.dependencies]
sysctl = "0.5.4"

[dev-dependencies]
futures-util = "0.3.28"
serde_json = "1.0.107"
tokio = { version = "1.32.0", default-features = false, features = ["rt"] }
reqwest = { package = "reqwest-impersonate", version ="0.11.27", default-features = false, features = [
    "boring-tls", "impersonate","json", "cookies", "stream", "multipart", "socks", "blocking"
] }
base64 = "0.21.4"
viuer = "0.6.2"
hex = "0.4.3"
sha2 = "0.10.8"
env_logger = "0.10.0"
openai = { path = "openai" }

[features]
default = ["serve"]
terminal = [
    "openai/api",
    "dep:tokio", 
    "dep:serde_json", 
    "dep:inquire", 
    "dep:colored_json", 
    "dep:indicatif",
    "dep:json_to_table",
    "dep:tabled"
    ]
serve = ["limit"]
limit = ["openai/limit", "openai/serve"]
# Enable jemalloc for binaries
jemalloc = ["jemallocator"]
# Enable bundled tcmalloc
tcmalloc = ["tcmalloc/bundled"]
# Enable snmalloc for binaries
snmalloc = ["snmalloc-rs"]
# Enable bundled rpmalloc
rpmalloc = ["dep:rpmalloc"]
# Enable mimalloc for binaries
mimalloc = ["dep:mimalloc"]

[[bin]]
name = "ninja"
path = "src/main.rs"

[[example]]
name = "chatgpt"
required-features = ["openai/api"]

[profile.release]
lto = true
opt-level = 'z'
codegen-units = 1
strip = true
panic = "abort"

[package.metadata.deb]
maintainer = "gngpp <gngppz@gmail.com>"
copyright = "2023, gngpp <gngppz@gmail.com>"
license-file = ["LICENSE", "4"]
extended-description = "Reverse engineered ChatGPT proxy (bypass Cloudflare 403 Access Denied)"
depends = "$auto"
section = "utility"
priority = "optional"
assets = [
    ["target/release/ninja", "usr/bin/ninja", "755"],
    ["README.md", "usr/share/doc/ninja/README", "644"],
]
